@model GenericSearch.Core.DateSearch

@{
    var type = typeof(GenericSearch.Core.DateComparators);
    var enumMembers = Enum.GetValues(type);
    string[] enumNames = Enum.GetNames(type);
    SelectListItem[] items = new SelectListItem[enumNames.Length];

    for (int i = 0; i < enumNames.Length; i++)
    {
        var display = type.GetMember(enumNames[i])[0].GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.DisplayAttribute), true).Cast<System.ComponentModel.DataAnnotations.DisplayAttribute>().FirstOrDefault();
        if (display != null)
        {
            enumNames[i] = display.Name;
        }

        items[i] = new SelectListItem()
        {
            Text = enumNames[i],
            Value = enumMembers.GetValue(i).ToString()
        };
    }
}

@Html.LabelFor(m => m.SearchTerm, this.Model.LabelText)
@Html.DropDownListFor(m => m.Comparator, items, new { @class = "dateSelect" })
@Html.TextBoxFor(m => m.SearchTerm, new { @class = "date" })

@if (this.Model.Comparator == GenericSearch.Core.DateComparators.InRange)
{
    @Html.TextBoxFor(m => m.SearchTerm2, new { @class = "date" })
}
else
{
    @Html.TextBoxFor(m => m.SearchTerm2, new { @class = "date", style = "display: none;" })
}

@Html.HiddenFor(m => m.Property)
@Html.HiddenFor(m => m.TargetTypeName)
@Html.Hidden("ModelTypeName", this.Model.GetType().AssemblyQualifiedName)

<br />